@model Kissi.Models.AddProductView


@*<h2>AddProduct</h2>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
     
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductId", null,((IList<System.Web.Mvc.ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark,
               htmlAttributes: new { @class = "form-control", @required="true",
               @oninvalid = "setCustomValidity('You must select a product')", @oninput = "setCustomValidity('')" })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @required = "true",
               @oninvalid = "setCustomValidity('You must input quantity')",
               @oninput = "setCustomValidity('')"
           } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-primary" />
                @Html.ActionLink("Back", "Create", new { }, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}